## THIS IS THE CONFIGURATION FILE FOR THE PRODUCTION AND STAGING ENVIRONEMENT OF RadioDNS.
## FOR THE HOLE SETUP DOCUMENTATION IS AVAILALBE IN THE DOCS FOLDER OF THIS REPOSITORY.

##============== DOCKER OPTIONS ===========
DOCKER_REPOSITORY=ebutech

##============== MYSQL SERVER ==============
# The name of the database that docker will create.
MYSQL_DATABASE=DATABASE

# Password for the the root user.
MYSQL_ROOT_PASSWORD=PASSWORD

##================ NGINX ===================
# Internal vpc dns name for the radiovis server.
VIS_INTERNAL_HOST=

# DNS name where one can find the VIS admin pannel (rabbitmq control panel).
VIS_ADMIN_HOSTNAME=

##================ RADIODNS ================
# Url to the ebu.io API. Value given when configuring the project in ebu.io.
API_URL=

# Port to listen to inside the docker container.
RADIO_DNS_PORT=5000

# Url for the mysql connection of alchemy.
SQLALCHEMY_URL=mysql://<USER>:<PASSWORD>@database:3306/<DATABASE_NAME>

# API secret. Random string defined by hand. To be append in the EBU.io configuration at the PlugItURI
# field. It looks something like this: http://<DOMAIN>/<API_SECRET>.
API_SECRET=

# Amazon AWS
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
AWS_ZONE=eu-west-1

# hostname for the RadioDns server
DOMAIN=dev.staging-radiodns.com.

# XSI
XSISERVING_ENABLED=True
XSISERVING_DOMAIN=epg.dev.staging-radiodns.com


# Default hostnames for RadioDNS Services
RADIOVIS_DNS=vis.dev.staging-radiodns.com
RADIOEPG_DNS=epg.dev.staging-radiodns.com
RADIOTAG_DNS=tag.dev.staging-radiodns.com
RADIOSPI_DNS=spi.dev.staging-radiodns.com

# Default Services ports
RADIOVIS_PORT=61613
RADIOEPG_PORT=80
RADIOTAG_PORT=80
RADIOSPI_PORT=443

# Wherever to enable the tag servicei.
RADIOTAG_ENABLED=False

# Wherever to enable debug mode.
DEBUG=False

# wherever the stack run without external dependencies such as AWS, EBU.IO, etc. Mostly for local testing and
# playing around.
STANDALONE=False

# The base URL for the PlugIi API - prefix url to access utilities of this server (e.g. /radiodns/ping).
# In staging and production mode, that should be the API_SECRET.
PI_BASE_URL=/<API_SECRET>/

# Allowed origin for this service.
PI_ALLOWED_NETWORKS=0.0.0.0/0

# Sentry DNS url.
SENTRY_DSN=

# Version of this service.
PI_API_VERSION=

# Name of this service.
PI_API_NAME=Staging

# XML and IMGs chache max-age options (in seconds).
XML_CACHE_TIMEOUT=10
IMG_CACHE_TIMEOUT=10

# Time during the server will try to connect to the mysql server before giving up (in seconds).
DATABASE_CONNECTION_MERCY_TIME=30

# Endpoint to the VIS player of radiodns manager.
VIS_WEB_SOCKET_ENDPOINT_HOST=

##================ CDN ======================
# If you want to use the aws cloudfront integration to deliver spi files.
USES_CDN=False

# Name of the bucket that will hold the SPI files. Please ensure that this name follow this set of rules:
# https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html
SPI_BUCKET_NAME=

# The SPI file generator executor will batch SPI file updates in order to be more efficient.
# Here you can specify how much time shall pass between each updates. In seconds.
SPI_GENERATION_INTERVAL=5

# The cloudfront domain that will serve the SPI files.
SPI_CLOUDFRONT_DOMAIN=

##================ RADIO VIS ================
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_VHOST=/
RABBITMQ_DEBUG=True
RABBITMQ_EXCHANGE=amq.fanout

MONITORING_HOST=rabbitmq
MONITORING_PORT=5672
MONITORING_USER=guest
MONITORING_PASSWORD=guest
MONITORING_VHOST=/
MONITORING_DEBUG=True
MONITORING_EXCHANGE=monitoring.buffer
MONITORING_QUEUE=radiovis
MONITORING_SERVER_ID=rabbit@radiodnsrabbitmq

STOMP_IP=0.0.0.0
STOMP_PORT=61613

MEMCACHED_HOST=

# RadioDns plugit API
# Scheme:
# 'http://<HOST>/<API_SECRET>/action/radiovis/api/<API_SECRET>/'
RADIODNS_API_URL=

FB_CHANNEL_CACHE=60
FB_QUEUE=fallbacklogs
FB_FALLBACK_CHECK=15
FB_FALLBACK_TIME=60
FB_IMAGE_LOCATIONS=
FB_LOGS_MAX_AGE=86400
FB_LOGS_CLEANUP=3600

STATS_GAUGE_APPNAME=radiovis.app
STATS_GAUGE_NB_CLIENTS=nb_tcp_cox
STATS_COUNTER_NBMESSAGE_SENT=radiovis.app.msg_sent
STATS_COUNTER_NBMESSAGE_RECV=radiovis.app.msg_recv
